#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    string input; cin >> input;
    ll l = 0, r = 0;
    using pss = pair<string,string>;    // original, lower
    vector<pss> token;
    string newToken, newTokenLower;
    for (r=0; r<input.size(); r++) {
        if (input[r] == '!') {
            newToken = newTokenLower = input.substr(l, r-l);
            for (auto& c : newTokenLower) c = tolower(c);
            l = r + 1;

            if (token.empty())
                token.emplace_back(move(newToken), move(newTokenLower));
            else {
                if (token.back().second == newTokenLower)
                    continue;
                if ((token.end()-2)->second == newTokenLower) {
                    token.pop_back();
                }
                else {
                    token.emplace_back(move(newToken), move(newTokenLower));
                }
            }
        }
    }
    for (auto& [str,_] : token) {
        cout << str << "!";
    }
    cout << input.substr(l, r-l);
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}