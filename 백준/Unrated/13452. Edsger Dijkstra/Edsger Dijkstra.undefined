#include <bits/stdc++.h>
#pragma warning(disable: 4996)
#pragma GCC optimize(linker, "/STACK:336777216")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    ll i, j, k;
    bool flag = false;
    ll lineNum = 0;
    string code;
    stack<ll> st;
    while (true) {
        lineNum++;
        getline(cin, code);
        if (code == "END") break;
        if (flag) continue;

        if (code[0] == 'l') {
            string num = "";
            for (i=5; isdigit(code[i]); i++)
                num += code[i];
            st.emplace(stoll(num));
        }


        else {      // if인 경우
            string tmp = "";
            ll idx = 0;
            while (code[idx] != '_') idx++;
            idx++;
            while (code[idx] != '_') idx++;
            idx++;
            for (; isdigit(code[idx]); idx++) {
                tmp += code[idx];
            }
            ll num = stoll(tmp);
            while (true) {
                if (st.empty()) {
                    cout << "bad\n";
                    flag = true;
                    break;
                }
                if (st.top() == num)
                    break;
                st.pop();
            }
        }
    }
    if (!flag) cout << "good\n";
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    string buffer; getline(cin, buffer);
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}
