#include <bits/stdc++.h>
#define INF 0x3f3f3f3f
using namespace std;

bool visited[10] = { 0 };
int ans = INF, N;
int cost[10][10];

void backTrack(int start, int cur, int depth, int val) {
	if(depth == N) {
		if(cost[cur][start]) {
			ans = min(ans, val + cost[cur][start]);
		}
		return;
	}
	for(int i = 0; i < N; i++) {
		if(!visited[i] && cost[cur][i] != 0) {
			visited[i] = true;
			backTrack(start, i, depth + 1, val + cost[cur][i]);
			visited[i] = false;
		}
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	cin >> N;
	for(int i = 0; i < N; i++) {
		for(int j = 0; j < N; j++) {
			cin >> cost[i][j];
		}
	}
	for(int i = 0; i < N; i++) {
		for(int j = 0; j < N; j++) visited[j] = false;
		visited[i] = true;
		backTrack(i, i, 1, 0);
	}
	cout << ans;
	
	return 0;
}