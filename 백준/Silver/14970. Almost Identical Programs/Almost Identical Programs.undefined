#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3, unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    while (true) {
        string str1; cin >> str1;
        if (str1 == ".") break;
        string str2; cin >> str2;

        vector<string> out1, in1, out2, in2;
        string tmp;
        bool in = true, out = false;
        bool stat = out;  // false: out, true: in
        for (auto& c : str1) {
            if (c == '"') {
                if (stat == in) in1.emplace_back(tmp);
                else out1.emplace_back(tmp);
                stat = !stat;
                tmp = "";
                continue;
            }
            tmp += c;
        }
        if (stat == out) out1.emplace_back(tmp);

        tmp = "";
        stat = out;
        for (auto& c : str2) {
            if (c == '"') {
                if (stat == in) in2.emplace_back(tmp);
                else out2.emplace_back(tmp);
                stat = !stat;
                tmp = "";
                continue;
            }
            tmp += c;
        }
        if (stat == out) out2.emplace_back(tmp);

        // cout << "\nout1 : ";
        // for (auto& e : out1) cout << e << " ";
        // cout << "\nout2 : ";
        // for (auto& e : out2) cout << e << " ";
        // cout << "\nin1 : ";
        // for (auto& e : in1) cout << e << " ";
        // cout << "\nin2 : ";
        // for (auto& e : in2) cout << e << " ";
        // cout << "\n";

        // 개수 다르면
        if (in1.size()!=in2.size() || out1.size()!=out2.size()) {
            cout << "DIFFERENT\n";
            continue;
        }

        // out 비교
        ll flag = false;
        for (ll i=0; i<out1.size(); i++) {
            if (out1[i] != out2[i]) {
                cout << "DIFFERENT\n";
                flag = true;
                break;
            }
        }
        if (flag) continue;

        // in 비교
        ll diff = 0;
        flag = false;
        for (ll i=0; i<in1.size(); i++) {
            if (in1[i] != in2[i]) {
                diff++;
                if (diff == 2) {
                    cout << "DIFFERENT\n";
                    flag = true;
                    break;
                }
            }
        }
        if (flag) continue;
        if (diff == 1) cout << "CLOSE\n";
        else cout << "IDENTICAL\n";
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}