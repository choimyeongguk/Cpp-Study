#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

ll K;
ll cnt = 0;

void merge(vl& A, ll p, ll q, ll r) {
    ll i = p, j = q + 1, t;
    vl tmp;
    while (i <= q && j <= r) {
        if (A[i] <= A[j])
            tmp.emplace_back(A[i++]);
        else tmp.emplace_back(A[j++]);
    }
    while (i <= q)
        tmp.emplace_back(A[i++]);
    while (j <= r)
        tmp.emplace_back(A[j++]);

    i = p, t = 0;
    while (i <= r) {
        A[i++] = tmp[t++];
        cnt++;
        if (cnt==K) {
            cout << tmp[t-1];
        }
    }
}

void merge_sort(vl& A, ll p, ll r) {
    if (p < r) {
        ll q = (p+r)>>1;
        merge_sort(A, p, q);
        merge_sort(A, q + 1, r);
        merge(A, p, q, r);
    }
}

void solve(ll testcase){
    ll i, j, k;
    ll N; cin >> N >> K;
    vl arr(N); for (auto& e : arr) cin >> e;
    merge_sort(arr, 0, N-1);
    if (cnt<K) {
        cout << -1;
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}