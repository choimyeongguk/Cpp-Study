#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216");
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    string start,target;
    cin>>start>>target;
    for (ll k=1;k<=100;k++) {
        //out<<start<<'\n';
        if (start.length()==target.length()) {
            ll i;
            for (i=0;i<start.size();i++) {
                if (start[i]!=target[i]) {
                    break;
                }
            }
            if (i==start.size()) {
                cout<<k;
                return;
            }
        }

        vl cnt(10,0);
        for (char ch:start) {
            ll cur=ch-'0';
            cnt[cur]++;
        }

        // for (ll x:cnt) cout<<x<<' ';
        // cout<<endl;

        string next;
        for (ll i=0;i<cnt.size();i++) {
            if (cnt[i]!=0) {

                string temp;
                while (cnt[i]) {
                    temp.push_back((cnt[i]%10)+'0');
                    cnt[i]/=10;
                }
                reverse(temp.begin(),temp.end());
                next+=temp;
                next.push_back(i+'0');
            }
        }
        start=next;
    }
    cout<<"Does not appear";
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test = 1; test<=t; test++) {
        solve(test);
    }
    return 0;
}