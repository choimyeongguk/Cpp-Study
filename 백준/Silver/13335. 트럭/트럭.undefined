#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;
using tlll = tuple<ll,ll,ll>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve() {
    ll i, j, k;
    ll n, w, l; cin >> n >> w >> l;
    queue<ll> waiting;
    for (i=0; i<n; i++) {
        cin >> j;
        waiting.emplace(j);
    }

    queue<pll> bridge;
    ll day = 0, sum = 0;
    while (true) {
        day++;
        if (!bridge.empty() && day-bridge.front().second==w) {
            sum -= bridge.front().first;
            bridge.pop();
        }
        if (bridge.empty() && waiting.empty())
            break;
        if (!waiting.empty() && sum+waiting.front()<=l && bridge.size()<w) {
            bridge.emplace(waiting.front(), day);
            sum += waiting.front();
            waiting.pop();
        }
    }
    cout << day;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}