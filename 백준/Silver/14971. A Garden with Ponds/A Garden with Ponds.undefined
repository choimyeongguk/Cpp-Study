#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3, unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    ll i, j, k;
    ll r, c;
    while (true) {
        cin>>r>>c;
        if (!r) break;
        vvl arr(r, vl(c));
        for (auto &x: arr) for (auto &y: x) cin>>y;
        ll ans=0;
        for (ll r1=0;r1<r;r1++) {
            for (ll c1=0;c1<c;c1++) {
                for (ll r2=r1+2;r2<r;r2++) {
                    for (ll c2=c1+2;c2<c;c2++) {
                        ll outer_min=LLONG_MAX;
                        for (i=r1;i<=r2;i++) outer_min=min(outer_min, arr[i][c1]);
                        for (i=r1;i<=r2;i++) outer_min=min(outer_min, arr[i][c2]);
                        for (i=c1;i<=c2;i++) outer_min=min(outer_min, arr[r1][i]);
                        for (i=c1;i<=c2;i++) outer_min=min(outer_min, arr[r2][i]);
                        bool ok=true;
                        ll sum=0;
                        for (i=r1+1;i<r2;i++) {
                            for (j=c1+1;j<c2;j++) {
                                if (arr[i][j]>=outer_min) ok=false;
                                sum += outer_min-arr[i][j];
                                if (!ok) break;
                            }
                            if (!ok) break;
                        }
                        // cout<<r1<<' '<<c1<<' '<<r2<<' '<<c2<<endl;
                        // cout<<ok<<' '<<sum<<endl;
                        if (ok) ans=max(ans, sum);
                    }
                }
            }
        }
        cout<<ans<<endl;
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}