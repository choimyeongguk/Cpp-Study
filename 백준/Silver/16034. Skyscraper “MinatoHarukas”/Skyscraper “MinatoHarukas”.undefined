#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

constexpr ll MAX = 1e5;
vl primes;
void preprocess() {
    ll i, j, k;
    vl arr(MAX);
    for (i=2;i<MAX;i++) {
        if (!arr[i]) primes.push_back(i);
        else continue;
        for (j=i<<1;j<MAX;j+=i) arr[j]=1;
    }
}

vl divs(ll n) {
    map<ll, ll> factors;
    for (auto p: primes) {
        if (n==1) break;
        while (n%p==0) {
            n/=p;
            factors[p]++;
        }
    }
    if (n!=1) factors[n]++;
    vl ret {1};
    for (auto &[p, e]: factors) {
        ll sz=ret.size();
        ll t=1;
        for (ll j=0;j<e;j++) {
            t*=p;
            for (ll i=0;i<sz;i++) {
                ret.push_back(ret[i]*t);
            }
        }
    }
    return ret;
}

void solve(ll test) {
    ll i, j, k;
    ll n;
    while (true) {
        cin>>n;
        if (!n) break;
        vl factors=divs(2*n);
        sort(factors.begin(), factors.end());
        factors.pop_back();
        reverse(factors.begin(), factors.end());
        for (ll a: factors) {
            ll b=2*n/a;
            if (a&1) {
                if (b/2-a/2 >= 1) {
                    cout<<b/2-a/2<<' '<<a<<'\n';
                    break;
                }
            }
            else {
                if (b&1) {
                    if (b/2 - (a/2-1) >= 1) {
                        cout<<b/2 - (a/2-1)<<' '<<a<<'\n';
                        break;
                    }
                }
            }
        }
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}