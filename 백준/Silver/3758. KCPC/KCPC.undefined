#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma optimize("O3,unroll-loops")
#pragma target("avx,avx2,fma")
using namespace std;
using ll = long long;
//using ll = int;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

struct team {
    ll score, cnt, time, idx;
};

void solve(ll test) {
    ll i, j, k;
    ll n, t, m; cin>>n>>k>>t>>m;
    vvl scores(n, vl(k, 0));
    vector<team> teams(n, {0, 0, 0, 0});
    for (i=0;i<n;i++) teams[i].idx=i;
    for (i=0;i<m;i++) {
        ll id, num, s; cin>>id>>num>>s;
        scores[id-1][num-1] = max<ll>(scores[id-1][num-1], s);
        teams[id-1].cnt++;
        teams[id-1].time=i;
    }
    for (i=0;i<n;i++) {
        for (j=0;j<k;j++) teams[i].score += scores[i][j];
    }
    sort(teams.begin(), teams.end(), [](const team &a, const team &b) {
        if (a.score == b.score) {
            if (a.cnt == b.cnt)
                return a.time < b.time;
            return a.cnt < b.cnt;
        }
        return a.score > b.score;
    });
    // for (i=0;i<n;i++) {
    //     cout<<teams[i].idx+1<<": "<<teams[i].score<<' '<<teams[i].cnt<<' '<<teams[i].time<<endl;
    // }
    for (i=0;i<n;i++) {
        if (teams[i].idx==t-1) {
            cout<<i+1<<'\n';
            return;
        }
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    for (ll test = 1; test<=t; test++) {
        solve(test);
    }

    return 0;
}