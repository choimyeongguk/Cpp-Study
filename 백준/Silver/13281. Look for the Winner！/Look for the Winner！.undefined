#include <bits/stdc++.h>
//#pragma warning(disdable:4996)
//#pragma comment(linker, "/STACK:336777216")
//#pragma GCC optimize ("O3, unroll-loops")
//#pragma GCC target ("avx, avx2, fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {

    while (1) {
        ll n,flag=0;
        vl cnt(30,0);
        cin>>n;
        if (n==0) return;

        for (ll i=0;i<n;i++) {
            char x;
            cin>>x;
            ll cur = x-'A';
            cnt[cur]++;
            //cout<<x<<'\n';

            ll mmax=0,smax=0;
            for (ll j=0;j<26;j++) {
                if (cnt[j]>cnt[mmax]) {
                    smax=mmax;
                    mmax=j;
                }
                else if (cnt[j]> cnt[smax]) {
                    smax=j;
                }
            }
            if (mmax==smax) {
                smax=1;
                for (ll j=2;j<26;j++) {
                    if (cnt[smax]<cnt[j]) {
                        smax=j;
                    }
                }
            }

            //cout<<"cnt["<<mmax<<"]="<<cnt[mmax]<<'\n';
            //cout<<"cnt["<<smax<<"]="<<cnt[smax]<<'\n'<<'\n';

            if (!flag && (n-i-1)+cnt[smax] < cnt[mmax]) {
                char temp=65+mmax;
                cout<<temp<<" ";
                cout<<i+1<<'\n';
                flag=1;
            }
        }

        if (flag==0) cout<<"TIE"<<'\n';

    }
}


int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}