#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    while (1) {
        ll r,n;
        cin>>r>>n;
        if (!r&&!n) break;

        vvl a(50,vl(30,0));
        for (ll i=0;i<n;i++) {
            ll x,y,h;
            cin>>x>>y>>h;
            x+=21;y+=21;
            for (ll j=x;j<y;j++) {
                for (ll k=1;k<=h;k++) {
                    a[j][k]=1;
                }
            }
        }

        vector<pll> point; // (x,y)
        for (ll i=1;i<=41;i++) {
            for (ll j=1;j<=20;j++) {
                if (a[i][j]!=a[i-1][j-1] && a[i-1][j-1]==a[i-1][j] && a[i-1][j-1]==a[i][j-1]) {
                    point.push_back({i - 21,j-1});
                }
                if (a[i][j]!=a[i+1][j+1] && a[i+1][j+1]==a[i][j+1] && a[i+1][j+1]==a[i+1][j]) {
                    point.push_back({i+1 - 21,j});
                }
                if (a[i][j]!=a[i+1][j-1] && a[i+1][j-1]==a[i+1][j] && a[i+1][j-1]==a[i][j-1]) {
                    point.push_back({i+1 - 21,j-1});
                }
                if (a[i][j]!=a[i-1][j+1] && a[i-1][j+1]==a[i-1][j] && a[i-1][j+1]==a[i][j+1]) {
                    point.push_back({i - 21,j});
                }
            }
        }

        ll len=0;
        for (ll j=1;j<=20;j++) {
            if (a[21][j]==1 && a[21][j]==a[21][j+1]) {
                len++;
            }
        }
        if (a[21][1]==1) len++;

        point.push_back({0,len});

        vl dis(point.size());
        ld mmin=1e10;
        //cout<<"debug::"<<'\n';
        for (ll i=0;i<point.size();i++) {
            //cout<<point[i].first<<" "<<point[i].second<<" :: val:";
            auto [x,y] = point[i];
            if (-r>=x || x>=r) continue;
            if (r*r-x*x>=0) {
                ld val=y-sqrt(r*r-x*x);
                //cout<<val<<'\n';
                dis.push_back(val);
                mmin=min(mmin,val);
            }
        }
        cout<<(mmin+r)<<'\n';

    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test = 1; test<=t; test++) {
        solve(test);
    }
    return 0;
}