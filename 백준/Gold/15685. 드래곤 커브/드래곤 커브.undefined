#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    vvl move(11, vl());
    move[1] = { 1 };
    for (i=2; i<=10; i++) {
        vl tmp = move[i-1];
        reverse(tmp.begin(), tmp.end());
        for (auto& e : tmp) e = -e;
        move[i].insert(move[i].end(), move[i-1].begin(), move[i-1].end());
        move[i].emplace_back(1);
        move[i].insert(move[i].end(), tmp.begin(), tmp.end());
    }

    ll N; cin >> N;
    ll r, c, d, g;
    vvl M(101, vl(101, 0));
    vvl dir = {{0, -1, 0, 1},{1, 0, -1, 0}};
    while (N--) {
        cin >> c >> r >> d >> g;
        for (auto& e : move[g]) {
            M[r][c] = 1;
            r += dir[0][d];
            c += dir[1][d];
            d = (d + e + 4) %4;
        }
        M[r][c] = 1;
        r += dir[0][d];
        c += dir[1][d];
        M[r][c] = 1;
    }

    ll ans = 0;
    for (i=0; i<100; i++)
        for (j=0; j<100; j++)
            if (M[i][j] && M[i][j+1] && M[i+1][j] && M[i+1][j+1])
                ans++;
    cout << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}