#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll testcase){
    ll i, j, k;
    ll MOD = 1'000'000'007;
    ll H, W; cin >> H >> W;
    ll W2 = W<<1;
    vvl C(W2, vl(W2, 0));
    for (i=0; i<W2; i++)
        C[i][0] = C[i][i] = 1;
    for (i=2; i<W2; i++)
        for (j=1; j<i; j++)
            C[i][j] = (C[i-1][j] + C[i-1][j-1]) %MOD;

    vvl dp(H+1, vl(W+1, 0));
    // dp[i][j]=k := i일에 미생물 j개 있는 경우의 수
    dp[0][1] = 1;
    for (i=1; i<=H; i++) {          // 시간
        for (j=1; j<=W; j++) {      // 자식 개수
            for (k=1; k<=W; k++) {  // 부모 개수
                dp[i][j] = (dp[i][j] + dp[i-1][k] * C[j+k-1][j]) %MOD;
            }
        }
    }

    ll ans = 0;
    for (i=1; i<=W; i++) {
        ans = (ans + dp[H][i]) %MOD;
    }
    cout << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}