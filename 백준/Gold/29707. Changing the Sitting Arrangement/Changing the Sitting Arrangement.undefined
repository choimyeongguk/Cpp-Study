#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve() {
    ll i, j, k;
    while (true) {
        ll N; cin >> N;
        if (!N) break;
        vvl M(N, vl(N));
        for (auto& e : M)
            for (auto& v : e)
                cin >> v;
        vvl M1((N+1)/2, vl(N/2));
        vvl M2(N/2, vl((N+1)/2));
        for (i=0; i<N; i+=2)
            for (j=1; j<N; j+=2)
                M1[i/2][j/2] = M[i][j];
        for (i=1; i<N; i+=2)
            for (j=0; j<N; j+=2)
                M2[i/2][j/2] = M[i][j];

        // for (auto& e : M1) {
        //     for (auto& v : e) cout << v << " ";
        //     cout << "\n";
        // }

        // ll shift = N/8 + 1;
        ll shift = N/4;
        // 왼쪽으로 shift
        for (i=0; i<shift; i++) {
            for (auto& e : M1) {
                e.emplace_back(e.front());
                e.erase(e.begin());
            }
            for (auto& e : M2) {
                e.emplace_back(e.front());
                e.erase(e.begin());
            }
        }

        // cout << "\n";
        // for (auto& e : M1) {
        //     for (auto& v : e) cout << v << " ";
        //     cout << "\n";
        // }
        // 위쪽으로 shift
        for (i=0; i<shift; i++) {
            M1.emplace_back(M1.front());
            M1.erase(M1.begin());
            M2.emplace_back(M2.front());
            M2.erase(M2.begin());
        }
        // cout << "\n";
        // for (auto& e : M1) {
        //     for (auto& v : e) cout << v << " ";
        //     cout << "\n";
        // }

        for (i=0; i<N; i+=2)
            for (j=1; j<N; j+=2)
                M[i][j] = M1[i/2][j/2];
        for (i=1; i<N; i+=2)
            for (j=0; j<N; j+=2)
                M[i][j] = M2[i/2][j/2];

        for (auto& e : M) {
            for (auto& v : e) cout << v << " ";
            cout << "\n";
        }
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}
