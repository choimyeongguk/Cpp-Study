#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test){
    ll i, j, k;
    ll n, h; cin>>n>>h;
    vector<pll> arr(n);
    for (auto &x: arr) cin>>x.first>>x.second;
    sort(arr.begin(), arr.end());
    vl interval;
    ll prev=0;
    for (auto &[s, e]: arr) {
        if (prev+1 < s) {
            interval.push_back(s-prev-1);
        }
        prev=max(e, prev);
    }
    if (prev != h) interval.push_back(h-prev);
    sort(interval.begin(), interval.end());
    // for (auto x: interval) cout<<x<<' '; cout<<endl;
    vl sarr(interval.size()+1);
    for (i=1;i<=interval.size();i++) sarr[i]=sarr[i-1]+interval[i-1];
    // for (auto x: sarr) cout<<x<<' '; cout<<endl;
    ll q; cin>>q;
    while (q--) {
        ll x; cin>>x;
        ll idx=lower_bound(interval.begin(), interval.end(), x)-interval.begin();
        // cout<<idx<<' '<<interval.size()-idx<<' ';
        cout<<sarr.back()-sarr[idx]-(x-1)*(interval.size()-idx)<<'\n';
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}
