#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    ll N, K; cin >> N >> K;
    vector<pll> arr(N);   // val, idx
    for (i=0; i<N; i++) {
        cin >> arr[i].first;
        arr[i].second = i + 1;
    }

    vector<pll> ans;
    while (!arr.empty()) {
        // 각 숫자별 개수 세기
        vl cnt(K+1, 0);
        for (auto& e : arr)
            cnt[e.first]++;
        // 숫자 하나만 남지는 않았는 지 판별
        ll num = 0;
        for (auto& e : cnt)
            if (e > 0)
                num++;
        if (num == 1) {
            cout << "-1\n";
            return;
        }
        // 가장 많은, 우선적으로 제거해야 하는 숫자 찾기
        ll target = max_element(cnt.begin(), cnt.end()) - cnt.begin();
        for (i=0; i<arr.size(); i++) {
            if (arr[i].first != target) continue;
            if (arr[i].first == arr[(i+1)%arr.size()].first) continue;
            ans.emplace_back(arr[i].second, arr[(i+1)%arr.size()].second);
            if (i == arr.size()-1) {
                arr.pop_back();
                arr.erase(arr.begin());
            } else arr.erase(arr.begin()+i, arr.begin()+i+2);
            break;
        }
    }
    for (auto& [x,y] : ans) {
        cout << x << " " << y << "\n";
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}