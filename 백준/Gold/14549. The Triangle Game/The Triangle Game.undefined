#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma GCC comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

struct Triangle {
    vvl stat;
    void set(ll a, ll b, ll c) {
        stat = {{a, b, c},
                   {b, c, a},
                   {c, a, b}};
    }
};

void solve(ll test) {
    ll i, j, k;
    char con = '*';
    while (con == '*') {
        vector<Triangle> tri(6);
        ll a, b, c;
        for (i=0; i<6; i++) {
            cin >> a >> b >> c;
            tri[i].set(a, b, c);
        }

        ll ans = -1e10;
        vector<bool> visited(6, false);
        function<void(ll,ll,ll,ll)> back_track = [&](ll head, ll cur, ll sum, ll depth) {
            if (depth == 5) {
                if (head == cur)
                    ans = max(ans, sum);
                return;
            }

            for (ll i=1; i<6; i++) {
                if (visited[i]) continue;
                visited[i] = true;
                for (ll j=0; j<3; j++) {
                    if (tri[i].stat[j][0] != cur) continue;
                    back_track(head, tri[i].stat[j][2], sum+tri[i].stat[j][1], depth+1);
                }
                visited[i] = false;
            }
        };

        visited[0] = true;
        for (i=0; i<3; i++) {
            back_track(tri[0].stat[i][0], tri[0].stat[i][2], tri[0].stat[i][1], 0);
        }
        if (ans == -1e10)
            cout << "none\n";
        else cout << ans << "\n";

        cin >> con;
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}
