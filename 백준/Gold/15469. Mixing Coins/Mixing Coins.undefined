#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test){
    ll n;
    cin>>n;

    stack <pair<char,ll>> st;
    deque <pair<char,ll>> dq;

    for (ll i=0;i<n;i++) {
        char a;
        ll num;
        cin>>a>>num;
        dq.push_back({a,num});
    }

    while (1) {
        if (dq.empty()) {
            ll ans = 0;
            while (!st.empty()) {
                ans += st.top().second;
                st.pop();
            }
            cout<<ans<<'\n';
            return;
        }
        if (dq.front().second>=3) { // 개수가 3이상인 경우
            if (dq.back().first == dq.front().first) {  // 뒤쪽 알파벳과 같다면
                dq.back().second+=dq.front().second/3;
            }
            else {
                dq.push_back({dq.front().first, dq.front().second/3});
            }

            if (!st.empty() && st.top().first == dq.front().first) {
                st.top().second+=dq.front().second%3;
            }
            else {
                if (dq.front().second%3!=0) {
                    st.push({dq.front().first, dq.front().second%3});
                }
            }

            dq.pop_front();
        }
        else {
            if (!st.empty() && st.top().first == dq.front().first) {
                st.top().second+=dq.front().second;
            }
            else {
                st.push({dq.front().first,dq.front().second});
            }
            dq.pop_front();
        }

        if (!st.empty() && st.top().second>=3) {
            if (dq.back().first == st.top().first) {
                dq.back().second+=st.top().second/3;
            }
            else {
                dq.push_back({st.top().first,st.top().second/3});
            }
            if (st.top().second%3==0) {
                st.pop();
            }
            else {
                st.top().second%=3;
            }
        }
    }


}

int main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}
