#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma GCC comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    ll i, j, k;
    while (true) {
        ll N, S, T;
        cin >> N; if (!N) break;
        cin >> S >> T;
        vl board(N+S+1, 0);
        for (i=1; i<=N; i++) cin >> board[i];

        vvl dp(N+S+1, vl(T+1, -1e10));
        dp[0][0] = 0;

        for (i=1; i<=N+S; i++) {                        // 도착 위치
            for (j=1; j<=T; j++) {                      // 주사위 사용 횟수
                for (k=max(0LL, i-S); k<i; k++) {   // 이전 위치
                    dp[i][j] = max(dp[i][j], dp[k][j-1]+board[i]);
                }
            }
        }

        ll ans = -1e10;
        for (i=N+1; i<=N+S; i++) {
            for (j=0; j<=T; j++) {
                ans = max(ans, dp[i][j]);
            }
        }
        cout << ans << "\n";
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}
