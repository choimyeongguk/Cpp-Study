#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma optimize("O3,unroll-loops")
#pragma target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve(ll test) {
    ll k,n;
    cin>>k>>n;

    vvl a(4,vl(n));
    for (ll i=0;i<4;i++) {
        for (ll j=0;j<n;j++) {
            cin>>a[i][j];
        }
    }

    vl p,q;
    for (ll i=0;i<n;i++) {
        for (ll j=0;j<n;j++) {
            p.push_back(a[0][i]+a[1][j]);
        }
    }
    for (ll i=0;i<n;i++) {
        for (ll j=0;j<n;j++) {
            q.push_back(a[2][i]+a[3][j]);
        }
    }
    q.push_back(-1e15);
    q.push_back(1e15);
    sort(q.begin(),q.end());
    q.erase(unique(q.begin(),q.end()),q.end());

    // cout<<"P: ";
    // for (ll x:p) cout<<x<<' ';
    // cout<<'\n';
    // cout<<"Q: ";
    // for (ll x:q) cout<<x<<' ';
    // cout<<'\n';

    ll mm=LLONG_MAX;
    ll val=LLONG_MAX;
    for (ll i=0;i<p.size();i++) {
        ll target=k-p[i];
        //cout<<"target: "<<target<<endl;
        ll lb = lower_bound(q.begin(),q.end(),target)-q.begin();

        //cout<<"lb-1: "<<lb-1<<"q[lb-1]: "<<q[lb-1]<<endl;
        //cout<<"lb: "<<lb<<"q[lb]: "<<q[lb]<<endl;

        if (mm>=abs(k-p[i]-q[lb])) {
            if (mm==abs(k-p[i]-q[lb]))
                val=min(val,p[i]+q[lb]);
            else {
                val=p[i]+q[lb];
            }
            mm=abs(k-p[i]-q[lb]);
        }
        if (mm>=abs(k-p[i]-q[lb-1])) {
            if (mm==abs(k-p[i]-q[lb-1])) {
                val=min(val,p[i]+q[lb-1]);
            }
            else {
                val=p[i]+q[lb-1];
            }
            mm=abs(k-p[i]-q[lb-1]);

        }
    }
    cout<<val<<'\n';
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    for (ll test = 1; test<=t; test++) {
        solve(test);
    }
    return 0;
}