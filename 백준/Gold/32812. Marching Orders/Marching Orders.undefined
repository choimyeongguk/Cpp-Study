#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess () {
    ll i, j, k;
}

pll extgcd(ll a, ll b) {
    if (b==0) return {1, 0};
    auto [p, q] = extgcd(b, a%b);
    return {q, p-q*(a/b)};
}

ll modinv(ll a, ll m) {
    // if (gcd(a, m) != 1) return -1;
    return (extgcd(a, m).first%m+m)%m;
}

ll crt(vl &a, vl &n, ll s=0) {
    ll sz=a.size();
    if (s==sz-1) return a[s];
    ll tmp=modinv(n[s], n[s+1]);
    ll tmp2=(tmp*(a[s+1]-a[s])%n[s+1]+n[s+1])%n[s+1];
    ll ora=a[s+1];
    ll tgcd=gcd(n[s], n[s+1]);
    if ((a[s+1]-a[s])%tgcd!=0) return -1;
    a[s+1]=a[s]+n[s]/tgcd*tmp2;
    n[s+1]*=n[s]/tgcd;
    ll ret=crt(a, n, s+1);
    n[s+1]/=n[s]/tgcd;
    a[s+1]=ora;
    return ret;
}

void solve() {
    ll i, j, k;
    ll n; cin>>n;
    string s; cin>>s;
    string tmp;
    tmp.push_back(s.back());
    vl a, mod;
    for (i=n-2;i>=0;i--) {
        char t = s[i];
        ll idx;
        for (idx=0;idx<tmp.size();idx++) {
            if (tmp[idx]>t) break;
        }
        // cout<<tmp<<' ';
        // cout<<idx<<endl;
        tmp.insert(idx, string(1, t));
        a.push_back(idx);
        mod.push_back(n-i);
    }
    // for (auto x : a) cout<<x<<' '; cout<<endl;
    // for (auto x : mod) cout<<x<<' '; cout<<endl;
    ll ans = crt(a, mod);
    if (ans==-1) cout<<"NO\n";
    else cout<<"YES\n"<<ans<<'\n';
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}