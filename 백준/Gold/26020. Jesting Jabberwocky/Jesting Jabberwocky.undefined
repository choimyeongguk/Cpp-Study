#include <bits/stdc++.h>
#pragma warning(disable::4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

ll lis(const vl& arr) {
    ll n = arr.size();
    ll ret = 0;
    vl tmp;    // value, cnt
    for (auto& x : arr) {
        ll loc = lower_bound(tmp.begin(), tmp.end(), x) - tmp.begin();
        if (loc == tmp.size()) tmp.emplace_back(x); // 가장 큼
        else {
            tmp[loc] = x;
        }
    }
    // cout << "ret : " << ret << "\n";
    return ret + tmp.size();
}

void solve(ll test) {
    ll i, j, k;
    string input; cin >> input;
    vector<char> suit = {'c', 'd', 'h', 's'};
    ll ans = 0, c, d, h, s;
    for (i=0; i<24; i++) {
        c = (find(suit.begin(), suit.end(), 'c') - suit.begin()) * 1e5;
        d = (find(suit.begin(), suit.end(), 'd') - suit.begin()) * 1e5;
        h = (find(suit.begin(), suit.end(), 'h') - suit.begin()) * 1e5;
        s = (find(suit.begin(), suit.end(), 's') - suit.begin()) * 1e5;
        vl arr(input.size()); ll idx = 0;
        for (auto& e : input) {
            switch (e) {
                case 'c':
                    arr[idx++] = c++;
                    break;
                case 'd':
                    arr[idx++] = d++;
                    break;
                case 'h':
                    arr[idx++] = h++;
                    break;
                case 's':
                    arr[idx++] = s++;
                    break;
            }
        }
        // for (auto& e : arr) cout << e << " ";
        // cout << " : " << lis(arr) << "\n";
        ans = max(ans, lis(arr));
        next_permutation(suit.begin(), suit.end());
    }
    cout << input.size() - ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}