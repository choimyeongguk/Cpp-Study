#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    ll N; cin >> N;
    vvl M(N, vl(N));
    for (auto& e : M)
        for (auto& v : e)
            cin >> v;

    ll idx = 0;
    vvl loc2id(N, vl(N));
    for (auto& e : loc2id)
        for (auto& v : e)
            v = idx++;

    ll NN = N*N;
    vl in_degree(NN, 0);
    vvl G(NN);
    vvl d = {{-1, 0, 1, 0},{0, 1, 0, -1}};
    for (i=0; i<N; i++) {
        for (j=0; j<N; j++) {
            for (k=0; k<4; k++) {
                ll nr = i + d[0][k];
                ll nc = j + d[1][k];
                if (nr<0 || nc<0 || nr==N || nc==N || M[nr][nc]<=M[i][j]) continue;
                G[loc2id[i][j]].emplace_back(loc2id[nr][nc]);
                in_degree[loc2id[nr][nc]]++;
            }
        }
    }

    vl height(NN, 0);
    queue<ll> q;
    for (i=0; i<NN; i++)
        if (!in_degree[i]) q.emplace(i);
    while (!q.empty()) {
        ll cur = q.front(); q.pop();
        for (auto& nxt : G[cur]) {
            height[nxt] = max(height[nxt], height[cur]+1);
            in_degree[nxt]--;
            if (!in_degree[nxt])
                q.emplace(nxt);
        }
    }

    ll ans = 0;
    for (i=0; i<NN; i++)
        ans = max(ans, height[i]);
    cout << ans+1;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}