#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve() {
    ll i, j, k;
    ll N, MIN, MAX; cin >> N >> MIN >> MAX;
    vl arr(N); for (auto& e : arr) cin >> e;
    for (auto& e : arr) e *= 2;  // 계산 편의 위해 2 곱해줌
    // MIN, MAX는 그대로 두면 MIN, MAX는 팔 길이가 됨
    sort(arr.begin(), arr.end());
    arr.emplace_back(1e15);

    ll ans = 0, prev = -1e15;
    for (i=0; i<N; i++) {
        ll l = min({    // 팔 길이(전체 구간/2)
            MAX,
            arr[i] - prev,
            arr[i+1]-MIN-arr[i]
        });
        if (l < MIN) {
            cout << -1;
            return;
        }
        ans += l;
        prev = arr[i] + l;
    }
    cout << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=t; test<=t; test++) {
        solve();
    }
    return 0;
}
