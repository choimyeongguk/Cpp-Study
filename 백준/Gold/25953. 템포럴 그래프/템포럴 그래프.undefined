#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

constexpr ll INF = 1e18;
void solve() {
    ll i, j, k;
    ll n, t, m, s, e;
    cin>>n>>t>>m>>s>>e;
    vl dist(n, INF);
    dist[s]=0;
    while (t--) {
        unordered_map<ll, ll> ndist;
        for (i=0;i<m;i++) {
            ll u, v, w; cin>>u>>v>>w;
            if (dist[u]!=INF && dist[v]>dist[u]+w)
                ndist[v] = ndist.contains(v) ? min(ndist[v], dist[u]+w) : dist[u]+w;
            if (dist[v]!=INF && dist[u]>dist[v]+w)
                ndist[u] = ndist.contains(u) ? min(ndist[u], dist[v]+w) : dist[v]+w;
        }
        for (auto& [u, d] : ndist)
            dist[u] = d;
    }
    cout<<(dist[e]==INF ? -1 : dist[e])<<'\n';
    // for (i=0;i<n;i++) cout<<dist[i]<<' ';
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}