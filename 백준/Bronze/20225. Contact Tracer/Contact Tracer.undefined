#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

struct DSU {
    vl par,sz;
    DSU(ll n) {
        par.resize(n+1);
        sz.assign(n+1,1);
        iota(par.begin(), par.end(),0);
    }
    ll _find(ll x) {
        if (par[x]==x) return x;
        return par[x]=_find(par[x]);
    }
    void _union(ll x,ll y) {
        x=_find(x);y=_find(y);
        if (x==y) return;
        if (sz[x]<sz[y]) swap(x,y);
        par[y]=x;
        sz[x]+=sz[y];
    }
};

void solve(ll test) {
    while (true) {
        ll m,n,p,cnt=1;
        cin>>m>>n>>p;
        if (!m && !n && !p) break;

        DSU dsu(m);
        for (ll i=0;i<n;i++) {
            ll u,v;
            cin>>u>>v;
            if (dsu._find(u)==dsu._find(p) && dsu._find(v)==dsu._find(p)) continue;
            if (dsu._find(u)==dsu._find(p)) {
                dsu._union(v,u);cnt++;
            }
            else if (dsu._find(v)==dsu._find(p)) {
                dsu._union(v,u);cnt++;
            }
        }
        cout<<cnt<<'\n';
    }

}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve(test);
    }
    return 0;
}