#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

vvl mul_mat_mat(const vvl& A, const vvl& B) {
    vvl ret(3, vl(3, 0));
    for (ll i=0; i<3; i++)  // 행
        for (ll j=0; j<3; j++)  // 열
            for (ll k=0; k<3; k++)
                ret[i][j] += A[i][k] * B[k][j];
    return ret;
}

vl mul_mat_vec(const vvl& A, const vl& x) {
    vl ret(3, 0);
    for (ll i=0; i<3; i++)
        for (ll j=0; j<3; j++)
            ret[i] += A[i][j] * x[j];
    return ret;
}

vvl matPow(const vvl& mat, const ll& x) {
    if (x==0) {
        return {
            { 1, 0, 0 },
            { 0, 1, 0 },
            { 0, 0, 1 }
        };
    }
    if (x==1) return mat;
    vvl tmp = matPow(mat, x/2);
    if (x&1) {
        vvl tmp2 = mul_mat_mat(tmp, tmp);
        return mul_mat_mat(tmp2, mat);
    }
    return mul_mat_mat(tmp, tmp);
}

void solve(ll testcase){
    ll i, j, k;
    ll N; cin >> N;
    if (N<2) {
        cout << N;
        return;
    }
    vvl fibM = {
        { 0, 1, 0 },
        { 0, 0, 1 },
        { 0, 1, 1 }
    };
    vl fib = { 0, 1, 1 };
    fibM = matPow(fibM, N-2);
    fib = mul_mat_vec(fibM, fib);
    cout << fib[2];
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}