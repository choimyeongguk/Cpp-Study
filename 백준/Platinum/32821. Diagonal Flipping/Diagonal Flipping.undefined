#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld  = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

void solve() {
    ll i, j, k;
    ll n, m; cin>>n>>m;
    vvl arr(n, vl(m));
    for (auto &x: arr) for (auto &y: x)
        cin>>y;

    if (n==1 && m==1) {
        cout<<arr[0][0]<<'\n';
        return;
    }

    function<ll(ll, ll, ll)> f = [&](ll sr, ll sc, ll t) -> ll {
        vector<pll> st;
        vvl vis(n, vl(m));
        ll ret = t;
        map<ll, ll> left, right;
        right[sr+sc] = t;
        // vis[sr][sc]=1;
        for (ll i=sr, j=sc; i>=0 && j<m; --i, ++j) {
            st.push_back({i, j});
            vis[i][j] = 1;
        }
        for (ll i=sr+1, j=sc-1; i<n && j>=0; ++i, --j) {
            st.push_back({i, j});
            vis[i][j] = 1;
        }
        while (st.size()) {
            auto [r, c] = st.back();
            st.pop_back();
            ll rd = r+c, ld = r-c;
            if (!right.contains(rd)) {
                right[rd] = arr[r][c] ^ left[ld];
                for (ll i=r, j=c; i>=0 && j<m; --i, ++j) {
                    if (vis[i][j]) continue;
                    vis[i][j] = 1;
                    st.push_back({i, j});
                }
                for (ll i=r, j=c; i<n && j>=0; ++i, --j) {
                    if (vis[i][j]) continue;
                    vis[i][j] = 1;
                    st.push_back({i, j});
                }
                if (right[rd]) ret++;
            }
            else if (!left.contains(ld)) {
                left[ld] = arr[r][c] ^ right[rd];
                for (ll i=r, j=c; i<n && j<m; ++i, ++j) {
                    if (vis[i][j]) continue;
                    vis[i][j] = 1;
                    st.push_back({i, j});
                }
                for (ll i=r, j=c; i>=0 && j>=0; --i, --j) {
                    if (vis[i][j]) continue;
                    vis[i][j] = 1;
                    st.push_back({i, j});
                }
                if (left[ld]) ret++;
            }
            else {
                if (arr[r][c] ^ left[ld] ^ right[rd]) return -1;
            }
        }
        return ret;
    };

    if (m==1) {
        ll odd=0, even=0;
        for (i=0;i<n;i+=2) {
            ll z = f(i, 0, 0);
            ll o = f(i, 0, 1);
            if (z==-1) z=1e10;
            if (o==-1) o=1e10;
            even += min(z, o);
        }
        for (i=1;i<n;i+=2) {
            ll z = f(i, 0, 0);
            ll o = f(i, 0, 1);
            if (z==-1) z=1e10;
            if (o==-1) o=1e10;
            odd += min(z, o);
        }
        if (odd>=1e7 || even>=1e7) {
            cout<<-1<<'\n';
        }
        else cout<<odd+even<<'\n';
        return;
    }

    if (n==1) {
        ll odd=0, even=0;
        for (i=0;i<m;i+=2) {
            ll z = f(0, i, 0);
            ll o = f(0, i, 1);
            if (z==-1) z=1e10;
            if (o==-1) o=1e10;
            even += min(z, o);
        }
        for (i=1;i<m;i+=2) {
            ll z = f(0, i, 0);
            ll o = f(0, i, 1);
            if (z==-1) z=1e10;
            if (o==-1) o=1e10;
            odd += min(z, o);
        }
        if (odd>=1e7 || even>=1e7) {
            cout<<-1<<'\n';
        }
        else cout<<odd+even<<'\n';
        return;
    }

    ll a=f(0, 0, 0);
    ll b=f(0, 0, 1);
    ll c=f(1, 0, 0);
    ll d=f(1, 0, 1);

    ll ans=1e10;
    if (a!=-1 && c!=-1) ans=min(ans, a+c);
    if (a!=-1 && d!=-1) ans=min(ans, a+d);
    if (b!=-1 && c!=-1) ans=min(ans, b+c);
    if (b!=-1 && d!=-1) ans=min(ans, b+d);

    cout<<(ans>=1e7 ? -1 : ans)<<'\n';
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}