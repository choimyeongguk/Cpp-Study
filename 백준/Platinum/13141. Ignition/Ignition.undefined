#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    ll INF = 1e10;
    ll N, M; cin >> N >> M;
    vvl Adj(N+1, vl(N+1, 0));
    vvl Path(N+1, vl(N+1, INF));
    ll S, E, L;
    for (i=0; i<M; i++) {
        cin >> S >> E >> L;
        Adj[E][S] = Adj[S][E] = max(Adj[S][E], L);
        Path[E][S] = Path[S][E] = min(Path[S][E], L);
    }
    for (i=1; i<=N; i++)
        Path[i][i] = 0;
    for (ll m=1; m<=N; m++)
        for (ll s=1; s<=N; s++)
            for (ll e=1; e<=N; e++)
                Path[s][e] = min(Path[s][e], Path[s][m]+Path[m][e]);

    ld ans = INF, maxTime;
    for (i=1; i<=N; i++) {  // 출발점
        maxTime = 0;
        for (j=1; j<=N; j++)
            for (k=j; k<=N; k++)
                maxTime = max(maxTime, (Path[i][j]+Path[i][k]+Adj[j][k])/2.0L);
        ans = min(ans, maxTime);
    }
    cout << fixed << setprecision(1) << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}