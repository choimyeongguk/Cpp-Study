#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216");
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
    // vl arr {2, 2, 3, 4, 5, 8, 9, 10, 11, 12};
    // ll cnt=0;
    // for (i=0;i<1024;i++) {
    //     ll n=i;
    //     ll sum=0;
    //     for (j=0;j<10;j++) {
    //         if ((n>>j)&1) sum+=arr[j];
    //     }
    //     if (sum==15) cnt++;
    // }
    // cout<<cnt<<endl;
}

void solve(ll test) {
    ll i, j, k;
    ll N; cin >> N;
    vl arr(N); char tmpN;
    vl arr2;
    for (auto& e : arr) {
        cin >> tmpN;
        if (isdigit(tmpN))
            e = tmpN - '0';
        else switch (tmpN) {
            case 'A': e = 1; break;
            case 'T': e = 10; break;
            case 'J': e = 11; break;
            case 'Q': e = 12; break;
            case 'K': e = 13; break;
        }
    }
    for (auto& e : arr) {
        arr2.emplace_back(e>=10 ? 10 : e);
    }
    sort(arr.begin(), arr.end());
    sort(arr2.begin(), arr2.end());

    ll ans = 0;

    // 15's
    map<ll,ll> mp;  // mp[val] = cnt  := val을 만들 수 있는 경우의 수
    // mp[0]=1;
    mp[arr2[0]] = 1;
    for (i=1; i<N; i++) {
        ll val = arr2[i];
        vector<pll> tmp;    // val, cnt
        tmp.emplace_back(val, 1);
        for (auto& [v,c] : mp) {
            if (v+val <= 15)
                tmp.emplace_back(v+val, c);
        }
        for (auto& [v,c] : tmp) {
            mp[v] += c;
        }
    }
    ans += mp[15]*2;
    // cout << "15 : " << mp

    // pairs
    ll tmp = 0;
    for (i=0; i<N; i++) {
        for (j=i+1; j<N; j++) {
            if (arr[i] == arr[j]) {
                ans += 2;
                tmp += 2;
            }
        }
    }

    // runs
    ll runScore = 0;
    stack<pll> st;  // val, cnt
    st.emplace(arr[0], 1);
    for (i=1; i<N; i++) {
        if (st.empty()) {
            st.emplace(arr[i], 1);
        }
        else if (st.top().first == arr[i]) {
            st.top().second++;
        }
        else if (st.top().first + 1 == arr[i]) {
            st.emplace(arr[i], 1);
        }
        else {
            ll length = 1;
            ll multiple = 1;
            ll sz = st.size();
            while (!st.empty()) {
                // length += st.top().second;
                multiple *= st.top().second;
                st.pop();
            }
            if (sz >= 3)
                runScore += sz*multiple;
            st.emplace(arr[i], 1);
        }
    }
    ll length = 1;
    ll multiple = 1;
    ll sz = st.size();
    while (!st.empty()) {
        multiple *= st.top().second;
        st.pop();
    }
    if (sz >= 3)
        runScore += sz*multiple;
    ans += runScore;
    // cout << runScore << "\n";

    cout << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll test = 1; test<=t; test++) {
        solve(test);
    }
    return 0;
}