#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    string str; cin >> str;
    ll N = str.size();
    vvl dp(N, vl(N, 0));
    // dp[i][j]=k := str[i...j] 의 palindrome 부분수열 개수
    for (i=0; i<N; i++)
        dp[i][i] = 1;
    ll MOD = 10'007;
    for (ll l=2; l<=N; l++) {
        for (i=N-l; i>=0; i--) {
            j = i+l-1;
            if (str[i]==str[j])
                dp[i][j] = (dp[i][j-1] + dp[i+1][j] + 1) %MOD;
            else
                dp[i][j] = (dp[i][j-1] + dp[i+1][j] - dp[i+1][j-1] +MOD) %MOD;
        }
    }
    cout << dp[0][N-1];
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}