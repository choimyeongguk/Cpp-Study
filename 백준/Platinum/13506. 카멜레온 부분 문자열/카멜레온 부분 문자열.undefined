#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void get_z(string& s, vl& Z) {
    ll n = s.size();
    Z.resize(n);
    Z[0] = n;
    for (ll i=1,l=0,r=0; i<n; i++) {
        if (i<r) Z[i] = min(r-i, Z[i-l]);
        while (i+Z[i]<n && s[Z[i]]==s[i+Z[i]]) Z[i]++;
        if (i+Z[i]>r) l=i, r=i+Z[i];
    }
}

void solve(ll testcase){
    ll i, j, k;
    string str; cin >> str;
    vl Z; get_z(str, Z);
    queue<ll> suffix;
    ll ans = 0;
    for (i=str.size()-1; i>0; i--) {
        while (!suffix.empty() && suffix.front() <= Z[i]) {
            ans = max(ans, suffix.front());
            suffix.pop();
        }
        if (Z[i] == str.size()-i) { // prefix == suffix
            suffix.emplace(Z[i]);
        }
    }
    if (!ans) {
        cout << -1;
    }
    else for (i=0; i<ans; i++) {
        cout << str[i];
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}