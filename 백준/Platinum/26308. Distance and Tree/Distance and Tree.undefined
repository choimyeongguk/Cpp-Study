#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

void solve(ll testcase){
    ll i, j, k;
    ll N; cin >> N;
    vl arr(N); ll root = -1;
    for (i=0; i<N; i++) {
        cin >> arr[i];
        if (arr[i] == 0) {
            if (root != -1) { cout << -1; return; }
            root = i;
        }
    }
    if (root == -1) { cout << -1; return; }

    vector<pll> edge;

    vector<bool> good(N, false);
    stack<pll> stCW;    // 깊이, 정점번호
    stCW.emplace(0, root);
    for (i=(root+1)%N; i!=root; i=(i+1)%N) {
        while (stCW.top().first>=arr[i]) stCW.pop();
        if (stCW.top().first==arr[i]-1) {
            edge.emplace_back(i, stCW.top().second);
            good[i] = true;
        }
        stCW.emplace(arr[i], i);
    }
    stack<pll> stCCW;
    stCCW.emplace(0, 0);
    for (i=(root-1+N)%N; i!=root; i=(i-1+N)%N) {
        while (stCCW.top().first>=arr[i]) stCCW.pop();
        if (good[i])
            stCCW.emplace(arr[i], i);
        else if (stCCW.top().first==arr[i]-1) {
            edge.emplace_back(i, stCCW.top().second);
            stCCW.emplace(arr[i], i);
        }
        else { cout << -1; return; }
    }

    for (auto& e : edge) {
        cout << e.first+1 << " " << e.second+1 << "\n";
    }
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}