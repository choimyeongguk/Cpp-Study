#include<bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using ull = unsigned long long;
using tlll = tuple<ll,ll,ll>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if(!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;

}

struct SegTree {
    ll n; vl tree;
    SegTree(): n(1e6+1), tree(n<<2, 0) {}
    void update(ll i, ll s, ll e, ll pos) {
        tree[i]++;
        if (s==e) return;
        ll m = (s+e)>>1;
        pos<=m ? update(i<<1, s, m, pos) : update(i<<1|1, m+1, e, pos);
    }
    void update(ll pos) { update(1, 0, n-1, pos); }
    // query(x) := x 이상인 수의 개수
    ll query(ll i, ll s, ll e, ll l, ll r) {
        if (s>r || e<l) return 0;
        if (l<=s && e<=r) return tree[i];
        ll m = (s+e)>>1;
        return query(i<<1, s, m, l, r)+query(i<<1|1, m+1, e, l, r);
    }
    ll query(ll x) { return query(1, 0, n-1, x, n-1); }
};

void solve(ll testcase){
    ll i, j, k;
    ll N; cin >> N;
    SegTree seg;
    ll ans = 0;
    while (N--) {
        cin >> i;
        ans += seg.query(i);
        seg.update(i);
    }
    cout << ans;
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    // cin >> t;
    for (ll testcase = 1; testcase <= t; testcase++){
        solve(testcase);
    }
    return 0;
}