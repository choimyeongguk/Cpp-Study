#include <bits/stdc++.h>
#pragma warning(disable:4996)
#pragma comment(linker,"/STACK:336777216")
#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
using namespace std;
using ll = long long;
using pll = pair<ll,ll>;
using ld = long double;
using pld = pair<ld,ld>;
using vl = vector<ll>;
using vvl = vector<vl>;

#ifdef ONLINE_JUDGE
constexpr bool ndebug = true;
#else
constexpr bool ndebug = false;
#endif

void setup() {
    if (!ndebug) {
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    }
    else {
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
    }
}

void preprocess() {
    ll i, j, k;
}

constexpr ll MOD = 1e10;
struct Mat22 {
    __int128 a, b, c, d;
    Mat22 operator* (const Mat22 o) const {
        Mat22 ret{a*o.a+b*o.c, a*o.b+b*o.d, c*o.a+d*o.c, c*o.b+d*o.d};
        ret.a %= MOD;
        ret.b %= MOD;
        ret.c %= MOD;
        ret.d %= MOD;
        return ret;
    }
};

ll fib(ll n) {
    if (n==0) return 0;
    if (n<=2) return 1;
    Mat22 a {1, 1, 1, 0};
    Mat22 f {1, 0, 0, 1};
    while (n) {
        if (n&1) f = f*a;
        a = a*a;
        n>>=1;
    }
    return f.b;
}

ll modmul(ll a, ll b, ll m) {
    return ((__int128)a * (__int128)b) % m;
}

ll modpow(ll n, ll k, ll m) {
    ll ret=1;
    n %= m;
    while (k) {
        if (k&1) ret=modmul(ret, n, m);
        n=modmul(n, n, m);
        k>>=1;
    }
    return ret;
}

void solve() {
    ll i, j, k;
    ll n; cin>>n;
    ll mod=15'000'000'000;
    ll pmod=4'000'000'000;
    ll ppmod=1'600'000'000;
    ll ans = modpow(7, n, ppmod) + ppmod;
    ans = modpow(7, ans, pmod) + pmod;
    ans = modpow(7, ans, mod);
    cout<<setw(10)<<setfill('0')<<fib(ans)<<'\n';
}

int main() {
    setup();
    preprocess();
    ll t = 1;
    cin >> t;
    for (ll test=1; test<=t; test++) {
        solve();
    }
    return 0;
}